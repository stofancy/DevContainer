// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/javascript-node
{
  "name": "Node.js Extended",
  // Use Dockerfile for custom configuration
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {},
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.defaultProfile.linux": "fish",
        "terminal.integrated.profiles.linux": {
          "fish": {
            "path": "/usr/bin/fish"
          }
        }
      },
      "extensions": [
        "ms-vscode.vscode-json",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-eslint",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "eamodio.gitlens",
        "GitHub.vscode-pull-request-github"
      ]
    }
  },

  // Load environment variables from .env file with base64 encoded SSH keys.
  // The previous relative reference (../.env) pointed outside the build context when running the container.
  // Use a path relative to the workspace root that exists: the .env file is located at c:\workspace\DevContainers\nodejs\.env.
  // Dev Containers CLI starts the container with /workspaces/DevContainers as mount for the parent folder; our target file is one level deeper.
  // Provide a defensive check via an entry script if needed instead of failing hard. Here we reference the correct path.
  "runArgs": ["--env-file", ".env"],

  // If you prefer optional env loading, comment the line above and use postCreateCommand logic to source it conditionally.

  // Forward selected environment variables from host to container
  "containerEnv": {
    "NPM_TOKEN": "${localEnv:NPM_TOKEN}",
    "NUGET_PAT": "${localEnv:NUGET_PAT}",
    "NPM_IDENT": "${localEnv:NPM_IDENT}"
  },

  // Persist ~/workspaces folder using a Docker volume
  "mounts": [
    "source=devcontainer-shared-workspaces,target=/home/node/workspaces,type=volume"
  ],

  // One-time ownership fix when the dev container is first created (not on every reopen).
  "onCreateCommand": "echo 'ðŸ”§ Setting ownership of workspace folders (first run)...' && sudo chown -R node:node /workspaces /home/node/workspaces || true && echo 'âœ… Ownership set.'",

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "/tmp/post-create-setup.sh",

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "node",
  "updateRemoteUserUID": true
}
