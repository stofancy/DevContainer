#!/bin/bash
# setup-ssh-dotenv.sh - Script to create .env file with SSH keys for dev container

ENV_FILE_PATH="./.devcontainer/.env"
TEMPLATE_FILE="./.devcontainer/.ssh-keys-template"

echo "🔑 SSH Keys Setup for Dev Container"
echo "=================================="
echo ""

# Function to show help
show_help() {
    echo "Usage: $0 [--help]"
    echo ""
    echo "This script creates a .env file with base64-encoded SSH keys from a template file."
    echo ""
    echo "Steps:"
    echo "1. Edit ./.devcontainer/.ssh-keys-template with your SSH keys"
    echo "2. Run this script to generate the .env file"
    echo "3. The template file will be automatically deleted for security"
    echo ""
    echo "Options:"
    echo "  --help            Show this help message"
}

# Function to setup from template file
setup_from_template() {
    if [[ ! -f "$TEMPLATE_FILE" ]]; then
        echo "❌ Template file not found: $TEMPLATE_FILE"
        echo ""
        echo "💡 Please create the template file first:"
        echo "   1. Copy the provided template to: $TEMPLATE_FILE"
        echo "   2. Edit it with your actual SSH keys"
        echo "   3. Run this script again"
        echo ""
        echo "Template content should look like:"
        echo "   PRIVATE_KEY=\"-----BEGIN OPENSSH PRIVATE KEY-----"
        echo "   your_private_key_content_here"
        echo "   -----END OPENSSH PRIVATE KEY-----\""
        echo ""
        echo "   PUBLIC_KEY=\"ssh-rsa your_public_key_here your_email@example.com\""
        return 1
    fi
    
    echo "📁 Loading keys from template file: $TEMPLATE_FILE"
    
    # Source the template file to get the variables
    source "$TEMPLATE_FILE"
    
    # Check if keys were provided
    if [[ "$PRIVATE_KEY" == *"PASTE_YOUR_PRIVATE_KEY_CONTENT_HERE"* ]]; then
        echo "❌ Please replace the placeholder text in $TEMPLATE_FILE with your actual private key"
        return 1
    fi
    
    if [[ "$PUBLIC_KEY" == *"PASTE_YOUR_PUBLIC_KEY_HERE"* ]]; then
        echo "❌ Please replace the placeholder text in $TEMPLATE_FILE with your actual public key"
        return 1
    fi
    
    # Basic validation
    if [[ -z "$PRIVATE_KEY" || -z "$PUBLIC_KEY" ]]; then
        echo "❌ Error: Both PRIVATE_KEY and PUBLIC_KEY variables must be set in $TEMPLATE_FILE"
        return 1
    fi
    
    if [[ ! "$PRIVATE_KEY" =~ "BEGIN" ]]; then
        echo "❌ Error: Private key doesn't look valid (missing BEGIN header)"
        return 1
    fi
    
    if [[ ! "$PUBLIC_KEY" =~ ^ssh- ]]; then
        echo "❌ Error: Public key doesn't look valid (should start with ssh-)"
        return 1
    fi
    
    PRIVATE_KEY_CONTENT="$PRIVATE_KEY"
    PUBLIC_KEY_CONTENT="$PUBLIC_KEY"
    
    # Cleanup template file immediately for security
    rm -f "$TEMPLATE_FILE"
    echo "🗑️  Template file removed for security"
    
    return 0
}

# Parse command line arguments
case "$1" in
    --help)
        show_help
        exit 0
        ;;
    "")
        # Run the template setup
        if ! setup_from_template; then
            exit 1
        fi
        ;;
    *)
        echo "❌ Unknown option: $1"
        echo ""
        show_help
        exit 1
        ;;
esac

# Encode to base64
echo "🔄 Encoding keys to base64..."
PRIVATE_KEY_B64=$(echo "$PRIVATE_KEY_CONTENT" | base64 -w 0)
PUBLIC_KEY_B64=$(echo "$PUBLIC_KEY_CONTENT" | base64 -w 0)

# Create .env file content with base64 encoded keys
{
    echo "# SSH Keys for Dev Container (Base64 Encoded)"
    echo "# Auto-generated by setup-ssh-dotenv.sh"
    echo "# DO NOT EDIT MANUALLY - Use the setup script to update"
    echo "SSH_PRIVATE_KEY_B64=$PRIVATE_KEY_B64"
    echo "SSH_PUBLIC_KEY_B64=$PUBLIC_KEY_B64"
} > "$ENV_FILE_PATH"

echo ""
echo "✅ SSH .env file created successfully!"
echo "📁 Location: $ENV_FILE_PATH"
echo "🔒 The .env file contains your SSH keys and should be kept secure."
echo "📋 The .env file is already in .gitignore to prevent accidental commits."
echo ""
echo "🚀 Next steps:"
echo "1. Rebuild your dev container:"
echo "   • Press Ctrl+Shift+P (Cmd+Shift+P on Mac)"
echo "   • Type 'Dev Containers: Rebuild Container'"
echo "   • Select it and wait for the rebuild to complete"
echo "2. Your SSH keys will be automatically available in the container"
echo ""
echo "📖 See README.md for more information."
